<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbu.dao.TUserMapper" >
  <resultMap id="BaseResultMap" type="com.hbu.entity.TUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="BIGINT" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uuid, number, password, name, phone, mailbox, department, creat_time, update_time,
    sex, isdel, status, reason
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hbu.entity.TUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hbu.entity.TUserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hbu.entity.TUser" >
    insert into t_user (id, uuid, number,
      password, name, phone,
      mailbox, department, creat_time,
      update_time, sex, isdel,
      status, reason)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{number,jdbcType=BIGINT},
      #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{mailbox,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{sex,jdbcType=INTEGER}, #{isdel,jdbcType=BIT},
      #{status,jdbcType=SMALLINT}, #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hbu.entity.TUser" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="mailbox != null" >
        mailbox,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=BIGINT},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hbu.entity.TUserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=BIGINT},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null" >
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set id = #{record.id,jdbcType=INTEGER},
    uuid = #{record.uuid,jdbcType=VARCHAR},
    number = #{record.number,jdbcType=BIGINT},
    password = #{record.password,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    phone = #{record.phone,jdbcType=VARCHAR},
    mailbox = #{record.mailbox,jdbcType=VARCHAR},
    department = #{record.department,jdbcType=VARCHAR},
    creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    sex = #{record.sex,jdbcType=INTEGER},
    isdel = #{record.isdel,jdbcType=BIT},
    status = #{record.status,jdbcType=SMALLINT},
    reason = #{record.reason,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbu.entity.TUser" >
    update t_user
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=BIGINT},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbu.entity.TUser" >
    update t_user
    set uuid = #{uuid,jdbcType=VARCHAR},
      number = #{number,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=BIT},
      status = #{status,jdbcType=SMALLINT},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--lst-->
  <select id="selectAll" resultMap="BaseResultMap" >
  select * from t_user where isdel=1 and status=1 order by id desc
</select>

  <select id="selectAllByNumber" resultMap="BaseResultMap" parameterType="java.lang.Long">
  select * from t_user where number= #{number,jdbcType=BIGINT} and isdel=1 and status=1
</select>
  <select id="selectByDepartment" resultMap="BaseResultMap"  parameterType="java.lang.String" >
  select *
  from t_user
  where department= #{department,jdbcType=VARCHAR} and isdel=1 and status=1
</select>

  <select id="selectDepartment" resultType="java.lang.String" parameterType="java.lang.Long" >
  select department
  from t_user
  where number= #{number,jdbcType=BIGINT} and isdel=1 and status=1
</select>
  <select id="selectByUUid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where uuid= #{uuid,jdbcType=VARCHAR} and isdel=1 and status=1
  </select>

  <select id="selectByNumber" parameterType="java.lang.Long" resultType="java.lang.String" >
   select password from t_user where number =  #{number,jdbcType=BIGINT} and isdel=1 and status=1
 </select>

  <select id="selectMailByNumber" parameterType="java.lang.Long" resultType="java.lang.String" >
   select mailbox from t_user where number =  #{number,jdbcType=BIGINT} and isdel=1 and status=1
 </select>
</mapper>